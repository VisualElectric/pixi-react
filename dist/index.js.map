{"version":3,"file":"index.js","sources":["../src/components/Context.ts","../src/helpers/isReadOnlyProperty.ts","../src/store.ts","../src/helpers/log.ts","../src/helpers/prepareInstance.ts","../src/helpers/afterActiveInstanceBlur.ts","../src/helpers/attach.ts","../src/helpers/appendChild.ts","../src/helpers/beforeActiveInstanceBlur.ts","../src/helpers/clearContainer.ts","../src/constants/EventPropNames.ts","../src/helpers/compare.ts","../src/constants/ReactIgnoredProps.ts","../src/helpers/gentleClone.ts","../src/helpers/gentleCloneProps.ts","../src/helpers/diffProps.ts","../src/helpers/isDiffSet.ts","../src/helpers/applyProps.ts","../src/constants/PixiReactIgnoredProps.ts","../src/helpers/catalogue.ts","../src/helpers/convertStringToPascalCase.ts","../src/helpers/parseComponentType.ts","../src/helpers/createInstance.ts","../src/helpers/detach.ts","../src/helpers/removeChild.ts","../src/helpers/switchInstance.ts","../src/helpers/commitUpdate.ts","../src/helpers/createTextInstance.ts","../src/helpers/detachDeletedInstance.ts","../src/helpers/finalizeInitialChildren.ts","../src/helpers/getChildHostContext.ts","../src/helpers/getCurrentEventPriority.ts","../src/helpers/getInstanceFromNode.ts","../src/helpers/getInstanceFromScope.ts","../src/helpers/getPublicInstance.ts","../src/helpers/getRootHostContext.ts","../src/helpers/hideInstance.ts","../src/helpers/invariant.ts","../src/helpers/insertBefore.ts","../src/helpers/prepareForCommit.ts","../src/helpers/preparePortalMount.ts","../src/helpers/prepareScopeUpdate.ts","../src/helpers/prepareUpdate.ts","../src/helpers/resetAfterCommit.ts","../src/helpers/shouldSetTextContent.ts","../src/helpers/unhideInstance.ts","../src/core/reconciler.ts","../src/core/roots.ts","../src/core/createRoot.ts","../src/helpers/unmountRoot.ts","../src/helpers/processUnmountQueue.ts","../src/helpers/queueForUnmount.ts","../src/helpers/unqueueForUnmount.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/components/Application.ts","../src/constants/UseAssetsStatus.ts","../src/helpers/extend.ts","../src/hooks/useApp.ts","../src/hooks/useApplication.ts","../src/helpers/getAssetKey.ts","../src/hooks/useAsset.ts","../src/hooks/useAssets.ts","../src/hooks/useExtend.ts","../src/hooks/useSuspenseAssets.ts","../src/hooks/useTick.ts","../src/index.ts"],"sourcesContent":["import { createContext } from 'react';\n\nimport type { ApplicationState } from '../typedefs/ApplicationState';\n\nexport const Context = createContext<ApplicationState>({} as ApplicationState);\n\nexport const ContextProvider = Context.Provider;\nexport const ContextConsumer = Context.Consumer;\n","export function isReadOnlyProperty(\n    objectInstance: Record<string, unknown>,\n    propertyKey: string,\n)\n{\n    const prototype = Object.getPrototypeOf(objectInstance);\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(prototype, propertyKey);\n\n    return !(typeof propertyDescriptor === 'undefined' || propertyDescriptor.set);\n}\n","import { type Root } from './typedefs/Root';\n\nconst store: {\n    debug: boolean,\n    unmountQueue: Set<Root>,\n} = {\n    debug: false,\n    unmountQueue: new Set(),\n};\n\nexport { store };\n","import { store } from '../store';\n\nexport type LogType = 'error' | 'info' | 'log' | 'warn';\n\nexport function log(logType: LogType, ...args: any[])\n{\n    if (!store.debug)\n    {\n        return;\n    }\n\n    // eslint-disable-next-line no-console\n    const logMethod = console[logType];\n\n    if (!(logMethod instanceof Function))\n    {\n        // eslint-disable-next-line no-console\n        console.warn(`Attempted to create an invalid log type: \"${logType}\"`);\n\n        return;\n    }\n\n    logMethod('@pixi/react', ...args);\n}\n","import type {\n    Container,\n    Filter,\n} from 'pixi.js';\nimport type { HostConfig } from '../typedefs/HostConfig';\nimport type { InstanceState } from '../typedefs/InstanceState';\n\n/** Create the instance with the provided sate and attach the component to it. */\nexport function prepareInstance<T extends Container | Filter | HostConfig['instance']>(\n    component: T,\n    state: Partial<InstanceState> = {},\n)\n{\n    const instance = component as HostConfig['instance'];\n\n    instance.__pixireact = Object.assign({\n        filters: [],\n        parent: null,\n        root: null as unknown as HostConfig['containerInstance'],\n        type: '',\n    }, state);\n\n    return instance;\n}\n","import { log } from './log';\n\n/**\n * No idea what this actually does. ü§∑üèª‚Äç‚ôÇÔ∏è\n */\nexport function afterActiveInstanceBlur()\n{\n    log('info', 'lifecycle::afterActiveInstanceBlur');\n}\n","import { Filter } from 'pixi.js';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nexport function attach(\n    parentInstance: HostConfig['containerInstance'],\n    childInstance: HostConfig['instance'],\n    targetIndex?: number\n)\n{\n    if (childInstance instanceof Filter)\n    {\n        (childInstance as unknown as HostConfig['filterInstance']).__pixireact.parent = parentInstance;\n\n        if (typeof targetIndex === 'number')\n        {\n            parentInstance.__pixireact.filters.splice(targetIndex, 0, childInstance);\n        }\n        else\n        {\n            parentInstance.__pixireact.filters.push(childInstance);\n        }\n\n        parentInstance.filters = parentInstance.__pixireact.filters;\n    }\n}\n","import {\n    Container,\n    Filter,\n} from 'pixi.js';\nimport { attach } from './attach';\nimport { log } from './log';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\n/** Adds elements to our application. */\nexport function appendChild(\n    parentNode: HostConfig['containerInstance'],\n    childNode: HostConfig['instance'] | null,\n)\n{\n    log('info', 'lifecycle::appendChild');\n\n    if (!childNode)\n    {\n        return;\n    }\n\n    if (childNode instanceof Container)\n    {\n        parentNode.addChild(childNode);\n    }\n    else if (childNode instanceof Filter)\n    {\n        attach(parentNode, childNode);\n    }\n}\n","import { log } from './log';\n\n/**\n * No idea what this actually does. ü§∑üèª‚Äç‚ôÇÔ∏è\n */\nexport function beforeActiveInstanceBlur()\n{\n    log('info', 'lifecycle::beforeActiveInstanceBlur');\n}\n","import { log } from './log';\n\n/** Mutate and remove all children from a container. */\nexport function clearContainer()\n{\n    log('info', 'lifecycle::clearContainer');\n\n    return false;\n}\n","export const PixiToReactEventPropNames = Object.freeze({\n    onclick: 'onClick',\n    onglobalmousemove: 'onGlobalMouseMove',\n    onglobalpointermove: 'onGlobalPointerMove',\n    onglobaltouchmove: 'onGlobalTouchMove',\n    onmousedown: 'onMouseDown',\n    onmouseenter: 'onMouseEnter',\n    onmouseleave: 'onMouseLeave',\n    onmousemove: 'onMouseMove',\n    onmouseout: 'onMouseOut',\n    onmouseover: 'onMouseOver',\n    onmouseup: 'onMouseUp',\n    onmouseupoutside: 'onMouseUpOutside',\n    onpointercancel: 'onPointerCancel',\n    onpointerdown: 'onPointerDown',\n    onpointerenter: 'onPointerEnter',\n    onpointerleave: 'onPointerLeave',\n    onpointermove: 'onPointerMove',\n    onpointerout: 'onPointerOut',\n    onpointerover: 'onPointerOver',\n    onpointertap: 'onPointerTap',\n    onpointerup: 'onPointerUp',\n    onpointerupoutside: 'onPointerUpOutside',\n    onrightclick: 'onRightClick',\n    onrightdown: 'onRightDown',\n    onrightup: 'onRightUp',\n    onrightupoutside: 'onRightUpOutside',\n    ontap: 'onTap',\n    ontouchcancel: 'onTouchCancel',\n    ontouchend: 'onTouchEnd',\n    ontouchendoutside: 'onTouchEndOutside',\n    ontouchmove: 'onTouchMove',\n    ontouchstart: 'onTouchStart',\n    onwheel: 'onWheel',\n});\nexport const ReactToPixiEventPropNames = Object.freeze({\n    onClick: 'onclick',\n    onGlobalMouseMove: 'onglobalmousemove',\n    onGlobalPointerMove: 'onglobalpointermove',\n    onGlobalTouchMove: 'onglobaltouchmove',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseUpOutside: 'onmouseupoutside',\n    onPointerCancel: 'onpointercancel',\n    onPointerDown: 'onpointerdown',\n    onPointerEnter: 'onpointerenter',\n    onPointerLeave: 'onpointerleave',\n    onPointerMove: 'onpointermove',\n    onPointerOut: 'onpointerout',\n    onPointerOver: 'onpointerover',\n    onPointerTap: 'onpointertap',\n    onPointerUp: 'onpointerup',\n    onPointerUpOutside: 'onpointerupoutside',\n    onRightClick: 'onrightclick',\n    onRightDown: 'onrightdown',\n    onRightUp: 'onrightup',\n    onRightUpOutside: 'onrightupoutside',\n    onTap: 'ontap',\n    onTouchCancel: 'ontouchcancel',\n    onTouchEnd: 'ontouchend',\n    onTouchEndOutside: 'ontouchendoutside',\n    onTouchMove: 'ontouchmove',\n    onTouchStart: 'ontouchstart',\n    onWheel: 'onwheel',\n});\n","/** Whether the input is an array. */\nexport function isArray(input: any): input is []\n{\n    return Array.isArray(input);\n}\n\n/** Whether the input is a boolean. */\nexport function isBoolean(input: any): input is boolean\n{\n    return typeof input === 'boolean';\n}\n\n/** Whether the inputs are equal. */\nexport function isEqual(\n    inputA: any,\n    inputB: any,\n    options: {\n        arrays?: 'reference' | 'shallow',\n        objects?: 'reference' | 'shallow',\n        strict?: boolean,\n    } = {\n        arrays: 'reference',\n        objects: 'reference',\n        strict: true,\n    })\n{\n    const {\n        arrays,\n        objects,\n        strict,\n    } = options;\n\n    // If input types are incompatible, or one input is undefined\n    if (typeof inputA !== typeof inputB || !!inputA !== !!inputB)\n    {\n        return false;\n    }\n\n    // Atomic, just compare a against b\n    if (isString(inputA) || isNumber(inputA))\n    {\n        return inputA === inputB;\n    }\n\n    const isInputAAnObject = isObject(inputA);\n\n    if (isInputAAnObject && objects === 'reference')\n    {\n        return inputA === inputB;\n    }\n\n    const isInputAAnArray = isArray(inputA);\n\n    if (isInputAAnArray && arrays === 'reference')\n    {\n        return inputA === inputB;\n    }\n\n    // If we're dealing with either an array or object, we'll shallow compare first to see if they match\n    if ((isInputAAnArray || isInputAAnObject) && inputA === inputB)\n    {\n        return true;\n    }\n\n    // Last resort, go through keys\n    let key;\n\n    // Check if inputB has all the keys of inputA\n    for (key in inputA)\n    {\n        if (!(key in inputB))\n        {\n            return false;\n        }\n    }\n\n    let input = inputA;\n\n    if (strict)\n    {\n        input = inputB;\n    }\n\n    // Check if values between keys match\n    if (isInputAAnObject && arrays === 'shallow' && objects === 'shallow')\n    {\n        for (key in input)\n        {\n            const equalityCheckResult = isEqual(inputA[key], inputB[key], {\n                strict,\n                objects: 'reference',\n            });\n\n            if (!equalityCheckResult)\n            {\n                return false;\n            }\n        }\n    }\n    else\n    {\n        for (key in input)\n        {\n            if (inputA[key] !== inputB[key])\n            {\n                return false;\n            }\n        }\n    }\n\n    if (isUndefined(key))\n    {\n        if (isInputAAnArray && (inputA.length === 0) && (inputB.length === 0))\n        {\n            return true;\n        }\n\n        if (isInputAAnObject && Object.keys(inputA).length === 0 && Object.keys(inputB).length === 0)\n        {\n            return true;\n        }\n\n        if (inputA !== inputB)\n        {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/** Whether the input is a function. */\nexport function isFunction(input: any): input is (...args: any) => any\n{\n    return typeof input === 'function';\n}\n\n/** Whether the input is null. */\nexport function isNull(input: any): input is null\n{\n    return input === null;\n}\n\n/** Whether the input is a number. */\nexport function isNumber(input: any): input is number\n{\n    return typeof input === 'number';\n}\n\n/** Whether the input is an object. */\nexport function isObject(input: any): input is Record<string, unknown>\n{\n    if (input !== Object(input))\n    {\n        return false;\n    }\n\n    if (isArray(input))\n    {\n        return false;\n    }\n\n    if (typeof input === 'function')\n    {\n        return false;\n    }\n\n    return true;\n}\n\n/** Whether the input is a string. */\nexport function isString(input: any): input is string\n{\n    return typeof input === 'string';\n}\n\n/** Whether the input is undefined. */\nexport function isUndefined(input: any): input is undefined\n{\n    // eslint-disable-next-line no-void\n    return input === void 0;\n}\n","export const ReactIgnoredProps = Object.freeze([\n    'children',\n    'key',\n    'ref',\n]);\n","/** Clones an object without any of the ignored keys. */\nexport function gentleClone(\n    object: Record<string, any>,\n    ignoredKeys: string[] = [],\n)\n{\n    const cloneBase: Record<string, any> = {};\n\n    return Object.entries(object).reduce((accumulator, [key, value]) =>\n    {\n        if (!ignoredKeys.includes(key))\n        {\n            accumulator[key] = value;\n        }\n\n        return accumulator;\n    }, cloneBase);\n}\n","import { ReactIgnoredProps } from '../constants/ReactIgnoredProps';\nimport { gentleClone } from './gentleClone';\n\n/** Clones a props object, excluding keys that are special to React and Pixi React. */\nexport function gentleCloneProps(\n    props: Record<string, any>,\n    additionalIgnoredProps: readonly string[] = [],\n)\n{\n    return gentleClone(props, ReactIgnoredProps.concat(additionalIgnoredProps));\n}\n","import { ReactToPixiEventPropNames } from '../constants/EventPropNames';\nimport { isEqual } from './compare';\nimport { gentleCloneProps } from './gentleCloneProps';\n\nimport type { Change } from '../typedefs/Change';\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nconst DEFAULT = '__default';\n\nexport function diffProps(\n    newProps: HostConfig['props'],\n    oldProps: HostConfig['props'] = {},\n    remove = false,\n)\n{\n    const newPropsRest = gentleCloneProps(newProps);\n    const oldPropsRest = gentleCloneProps(oldProps);\n\n    const entries = Object.entries(newPropsRest);\n\n    const changes: Change[] = [];\n\n    // Catch removed props, prepend them so they can be reset or removed\n    if (remove)\n    {\n        const oldPropsKeys = Object.keys(oldPropsRest);\n\n        let propIndex = 0;\n\n        while (propIndex < oldPropsKeys.length)\n        {\n            const propKey = oldPropsKeys[propIndex];\n            const isPropRemoved = !(propKey in newPropsRest);\n\n            if (isPropRemoved)\n            {\n                entries.unshift([propKey, `${DEFAULT}remove`]);\n            }\n\n            propIndex += 1;\n        }\n    }\n\n    entries.forEach(([key, value]) =>\n    {\n        // When props match bail out\n        if (isEqual(value, oldPropsRest[key]))\n        {\n            return;\n        }\n\n        // Collect handlers and bail out\n        if (key in ReactToPixiEventPropNames)\n        {\n            changes.push([key, value, true, []]);\n\n            return;\n        }\n\n        // Split dashed props\n        let entries: string[] = [];\n\n        if (key.includes('-'))\n        {\n            entries = key.split('-');\n        }\n\n        changes.push([key, value, false, entries]);\n\n        // Reset pierced props\n        for (const prop in newPropsRest)\n        {\n            const value = newPropsRest[prop];\n\n            if (prop.startsWith(`${key}-`))\n            {\n                changes.push([prop, value, false, prop.split('-')]);\n            }\n        }\n    });\n\n    return { changes };\n}\n","import type { DiffSet } from '../typedefs/DiffSet';\n\n/** Whether the input is a diff set. */\nexport function isDiffSet(input: any): input is DiffSet\n{\n    const inputAsDiffSet = input as DiffSet;\n\n    if (!inputAsDiffSet)\n    {\n        return false;\n    }\n\n    if (!inputAsDiffSet.changes)\n    {\n        return false;\n    }\n\n    return true;\n}\n","import {\n    Container,\n    Graphics,\n} from 'pixi.js';\nimport {\n    PixiToReactEventPropNames,\n    ReactToPixiEventPropNames,\n} from '../constants/EventPropNames';\nimport {\n    isNull,\n    isUndefined,\n} from './compare';\nimport { diffProps } from './diffProps';\nimport { isDiffSet } from './isDiffSet';\nimport { isReadOnlyProperty } from './isReadOnlyProperty';\nimport { log } from './log';\n\nimport type {\n    FederatedPointerEvent,\n    FederatedWheelEvent,\n} from 'pixi.js';\nimport type { DiffSet } from '../typedefs/DiffSet';\nimport type { HostConfig } from '../typedefs/HostConfig';\nimport type { InstanceState } from '../typedefs/InstanceState';\n\nconst DEFAULT = '__default';\nconst DEFAULTS_CONTAINERS = new Map();\n\nconst PIXI_EVENT_PROP_NAME_ERROR_HAS_BEEN_SHOWN: Record<string, boolean> = {};\n\nexport type MaybeInstance = Partial<HostConfig['instance']>;\n\nfunction targetKeyReducer(accumulator: any, key: string)\n{\n    if (accumulator)\n    {\n        const value = accumulator[key];\n\n        if (!isUndefined(value) && !isNull(value))\n        {\n            return value;\n        }\n    }\n\n    return accumulator;\n}\n\n/** Apply properties to Pixi.js instance. */\nexport function applyProps(\n    instance: MaybeInstance,\n    data: HostConfig['props'] | DiffSet,\n)\n{\n    const {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        __pixireact: instanceState = {} as InstanceState,\n        ...instanceProps\n    } = instance;\n\n    let typedData;\n\n    if (isDiffSet(data))\n    {\n        typedData = data as DiffSet;\n    }\n    else\n    {\n        typedData = diffProps(data, instanceProps as HostConfig['props']);\n    }\n\n    const { changes } = typedData;\n\n    let changeIndex = 0;\n\n    while (changeIndex < changes.length)\n    {\n        const change = changes[changeIndex];\n        let hasError = false;\n        let key = change[0] as keyof HostConfig['instance'];\n        let value = change[1];\n        const isEvent = change[2];\n\n        const keys = change[3];\n\n        let currentInstance = instance;\n        let targetProp = currentInstance[key];\n\n        if ((key as string === 'draw') && (typeof value === 'function'))\n        {\n            if (instance instanceof Graphics)\n            {\n                value(instance);\n            }\n            else\n            {\n                hasError = true;\n                log('warn', `The \\`draw\\` prop was used on a \\`${instanceState.type}\\` component, but it's only valid on \\`graphics\\` components.`);\n            }\n        }\n\n        if (key in PixiToReactEventPropNames)\n        {\n            const typedKey = key as keyof typeof PixiToReactEventPropNames;\n\n            hasError = true;\n\n            if (!PIXI_EVENT_PROP_NAME_ERROR_HAS_BEEN_SHOWN[key])\n            {\n                PIXI_EVENT_PROP_NAME_ERROR_HAS_BEEN_SHOWN[key] = true;\n\n                log('warn', `Event names must be pascal case; instead of \\`${key}\\`, you probably want \\`${PixiToReactEventPropNames[typedKey]}\\`.`);\n            }\n        }\n\n        if (!hasError)\n        {\n            // Resolve dashed props\n            if (keys.length)\n            {\n                targetProp = keys.reduce(targetKeyReducer, currentInstance);\n\n                // If the target is atomic, it forces us to switch the root\n                if (!(targetProp && (targetProp as unknown as Record<string, unknown>).set))\n                {\n                    const [name, ...reverseEntries] = keys.reverse();\n\n                    currentInstance = reverseEntries.reverse().reduce(targetKeyReducer, currentInstance);\n\n                    key = name as keyof MaybeInstance;\n                }\n            }\n\n            // https://github.com/mrdoob/three.js/issues/21209\n            // HMR/fast-refresh relies on the ability to cancel out props, but pixi.js\n            // has no means to do this. Hence we curate a small collection of value-classes\n            // with their respective constructor/set arguments\n            // For removed props, try to set default values, if possible\n            if (value === `${DEFAULT}remove`)\n            {\n                if (currentInstance instanceof Container)\n                {\n                    // create a blank slate of the instance and copy the particular parameter.\n                    let ctor = DEFAULTS_CONTAINERS.get(currentInstance.constructor);\n\n                    if (!ctor)\n                    {\n                        /** @type {Container} */\n                        ctor = /** @type {*} */ (currentInstance.constructor);\n\n                        // eslint-disable-next-line new-cap\n                        ctor = new ctor();\n\n                        DEFAULTS_CONTAINERS.set(currentInstance.constructor, ctor);\n                    }\n\n                    value = ctor[key];\n                }\n                else\n                {\n                    // instance does not have constructor, just set it to 0\n                    value = 0;\n                }\n            }\n\n            // Deal with events ...\n            if (isEvent && instanceState)\n            {\n                const typedKey = key as keyof typeof ReactToPixiEventPropNames;\n                const pixiKey = ReactToPixiEventPropNames[typedKey];\n\n                if (value)\n                {\n                    currentInstance[pixiKey] = value as (event: FederatedPointerEvent | FederatedWheelEvent) => void;\n                }\n                else\n                {\n                    delete currentInstance[pixiKey];\n                }\n            }\n            else if (!isReadOnlyProperty(currentInstance as Record<string, unknown>, key))\n            {\n                // @ts-expect-error Typescript is grumpy because this could be setting a readonly key, but we're already handling that in the conditional above. ü§∑üèª‚Äç‚ôÇÔ∏è\n                currentInstance[key] = value;\n            }\n        }\n\n        changeIndex += 1;\n    }\n\n    return instance;\n}\n","import { PixiToReactEventPropNames } from './EventPropNames';\n\nexport const PixiReactIgnoredProps = Object.freeze([\n    ...Object.keys(PixiToReactEventPropNames),\n    'draw',\n]);\n","import type { HostConfig } from '../typedefs/HostConfig';\n\nexport const catalogue: {\n    [name: string]: {\n        new (...args: any): HostConfig['instance'],\n    }\n} = {};\n","/** Converts a string to PascalCase. */\nexport function convertStringToPascalCase<S extends string>(string: S)\n{\n    const firstChar = string.charAt(0);\n    const rest = string.substring(1);\n\n    return `${firstChar.toUpperCase()}${rest}`;\n}\n","function lowercaseFirstCharacter(_fullMatch: string, firstCharacter: string)\n{\n    return firstCharacter.toLowerCase();\n}\n\nexport function parseComponentType(type: string)\n{\n    let parsedType = type;\n\n    if (type.startsWith('pixi'))\n    {\n        parsedType = type.replace(/^pixi([A-Z])/, lowercaseFirstCharacter);\n    }\n\n    return parsedType;\n}\n","import { ReactToPixiEventPropNames } from '../constants/EventPropNames';\nimport { PixiReactIgnoredProps } from '../constants/PixiReactIgnoredProps';\nimport { applyProps } from './applyProps';\nimport { catalogue } from './catalogue';\nimport { convertStringToPascalCase } from './convertStringToPascalCase';\nimport { gentleCloneProps } from './gentleCloneProps';\nimport { log } from './log';\nimport { parseComponentType } from './parseComponentType';\nimport { prepareInstance } from './prepareInstance';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nexport function createInstance(\n    type: HostConfig['type'],\n    props: HostConfig['props'],\n    root: HostConfig['containerInstance'],\n)\n{\n    log('info', 'lifecycle::createInstance');\n\n    const parsedType = parseComponentType(type);\n\n    // Convert lowercase component name to PascalCase\n    const name = convertStringToPascalCase(parsedType);\n\n    if (!(name in catalogue))\n    {\n        throw new Error(`${name} is not part of the PIXI namespace! Did you forget to extend?`);\n    }\n\n    // Get the class from an imported Pixi.js namespace\n    const PixiComponent = catalogue[name];\n\n    const pixiProps = gentleCloneProps(props, PixiReactIgnoredProps);\n\n    // Clone event props\n    Object.entries(props).forEach(([key, value]) =>\n    {\n        if (key in ReactToPixiEventPropNames)\n        {\n            const pixiEventName = ReactToPixiEventPropNames[key as keyof typeof ReactToPixiEventPropNames];\n\n            pixiProps[pixiEventName] = value;\n        }\n    });\n\n    const instance = prepareInstance(new PixiComponent(pixiProps), {\n        root,\n        type: parsedType,\n    });\n\n    // Set initial props\n    applyProps(instance, props);\n\n    return instance;\n}\n","import { Filter } from 'pixi.js';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nexport function detach(\n    childInstance: HostConfig['instance'],\n)\n{\n    if (childInstance instanceof Filter)\n    {\n        const parentInstance = childInstance.__pixireact.parent as HostConfig['instance'];\n\n        if (parentInstance)\n        {\n            const filterIndex = parentInstance.__pixireact.filters.indexOf(childInstance);\n\n            parentInstance.__pixireact.filters.splice(filterIndex, 1);\n            parentInstance.filters = parentInstance.__pixireact.filters;\n        }\n\n        childInstance.__pixireact.parent = null;\n    }\n}\n","import { Filter } from 'pixi.js';\nimport { detach } from './detach';\nimport { log } from './log';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\n/** Removes elements from our scene and disposes of them. */\nexport function removeChild(\n    _parentInstance: HostConfig['containerInstance'],\n    childInstance: HostConfig['instance'],\n)\n{\n    log('info', 'lifecycle::removeChild');\n\n    if (childInstance instanceof Filter)\n    {\n        detach(childInstance);\n    }\n\n    childInstance.destroy();\n}\n","import { appendChild } from './appendChild';\nimport { createInstance } from './createInstance';\nimport { removeChild } from './removeChild';\n\nimport type { Fiber } from 'react-reconciler';\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nexport function switchInstance(\n    instance: HostConfig['instance'],\n    type: HostConfig['type'],\n    newProps: HostConfig['props'],\n    fiber: Fiber,\n)\n{\n    const parent = instance.__pixireact?.parent;\n\n    if (!parent)\n    {\n        return;\n    }\n\n    const root = instance.__pixireact.root as HostConfig['containerInstance'];\n    const newInstance = createInstance(type, newProps, root);\n\n    if (!instance.__pixireact.autoRemovedBeforeAppend)\n    {\n        removeChild(parent, instance);\n    }\n\n    if (newInstance.parent)\n    {\n        newInstance.__pixireact.autoRemovedBeforeAppend = true;\n    }\n\n    appendChild(parent as HostConfig['containerInstance'], newInstance);\n\n    // This evil hack switches the react-internal fiber node\n    // https://github.com/facebook/react/issues/14983\n    // https://github.com/facebook/react/pull/15021\n    const fibers = [fiber, fiber.alternate];\n\n    fibers.forEach((fiber) =>\n    {\n        if (fiber !== null)\n        {\n            fiber.stateNode = newInstance;\n\n            if (fiber.ref)\n            {\n                if (typeof fiber.ref === 'function')\n                {\n                    fiber.ref(newInstance);\n                }\n                else\n                {\n                    const ref = fiber.ref;\n\n                    ref.current = newInstance;\n                }\n            }\n        }\n    });\n}\n","import { applyProps } from '../helpers/applyProps';\nimport { log } from '../helpers/log';\nimport { switchInstance } from './switchInstance';\n\nimport type { Fiber } from 'react-reconciler';\nimport type { HostConfig } from '../typedefs/HostConfig';\nimport type { UpdatePayload } from '../typedefs/UpdatePayload';\n\nexport function commitUpdate(\n    instance: HostConfig['instance'],\n    updatePayload: UpdatePayload,\n    type: HostConfig['type'],\n    _oldProps: HostConfig['props'],\n    newProps: HostConfig['props'],\n    fiber: Fiber,\n)\n{\n    log('info', 'lifecycle::commitUpdate');\n\n    const {\n        diff,\n        shouldReconstruct,\n    } = updatePayload;\n\n    if (shouldReconstruct)\n    {\n        switchInstance(instance, type, newProps, fiber);\n    }\n    else if (diff)\n    {\n        applyProps(instance, diff);\n    }\n}\n","import { log } from './log';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\n/** Always throws, because we don't support this (yet). */\nexport function createTextInstance(\n    _text: string,\n    _rootContainer: HostConfig['containerInstance'],\n    _hostContext: null,\n    _internalHandle: any,\n)\n{\n    log('info', 'lifecycle::createTextInstance');\n    throw new Error('Text instances are not yet supported. Please use a `<text>` component.');\n\n    return _rootContainer;\n}\n","import { log } from './log';\n\n/** No idea what this actually does. ü§∑üèª‚Äç‚ôÇÔ∏è */\nexport function detachDeletedInstance()\n{\n    log('info', 'lifecycle::detachDeletedInstance');\n}\n","import { log } from './log';\n\n/** Applies final mutations during the render phase. */\nexport function finalizeInitialChildren()\n{\n    log('info', 'lifecycle::finalizeInitialChildren');\n\n    return false;\n}\n","import { log } from './log';\n\nexport function getChildHostContext<T>(parentHostContext: T)\n{\n    log('info', 'lifecycle::getChildHostContext');\n\n    return parentHostContext;\n}\n","import {\n    ContinuousEventPriority,\n    DefaultEventPriority,\n    DiscreteEventPriority,\n} from 'react-reconciler/constants.js';\nimport { log } from './log';\n\nexport function getCurrentEventPriority()\n{\n    log('info', 'lifecycle::getCurrentEventPriority');\n\n    const globalScope = (typeof self !== 'undefined' && self) || (typeof window !== 'undefined' && window);\n\n    if (!globalScope)\n    {\n        return DefaultEventPriority;\n    }\n\n    const name = globalScope.event?.type;\n\n    switch (name)\n    {\n        case 'click':\n        case 'contextmenu':\n        case 'dblclick':\n        case 'pointercancel':\n        case 'pointerdown':\n        case 'pointerup':\n            return DiscreteEventPriority;\n        case 'pointermove':\n        case 'pointerout':\n        case 'pointerover':\n        case 'pointerenter':\n        case 'pointerleave':\n        case 'wheel':\n            return ContinuousEventPriority;\n        default:\n            return DefaultEventPriority;\n    }\n}\n","import { log } from './log';\n\n/** No idea what this actually does. ü§∑üèª‚Äç‚ôÇÔ∏è */\nexport function getInstanceFromNode()\n{\n    log('info', 'lifecycle::getInstanceFromNode');\n\n    return null;\n}\n","import { log } from './log';\n\n/** Always throws because we don't support this. */\nexport function getInstanceFromScope(scope: any)\n{\n    log('info', 'lifecycle:getInstanceFromScope');\n    throw new Error('Not yet implemented.');\n\n    return scope;\n}\n","import { log } from './log';\n\nexport function getPublicInstance<T>(instance: T)\n{\n    log('info', 'lifecycle::getPublicInstance');\n\n    return instance;\n}\n","import { log } from './log';\n\n/** Retrieves the host context from the root container. */\nexport function getRootHostContext()\n{\n    log('info', 'lifecycle::getRootHostContext');\n\n    return null;\n}\n","import {\n    Container,\n    Filter,\n} from 'pixi.js';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nexport function hideInstance(\n    instance: HostConfig['instance']\n)\n{\n    if (instance instanceof Container)\n    {\n        instance.visible = false;\n    }\n    else if (instance instanceof Filter)\n    {\n        instance.enabled = false;\n    }\n}\n","/** Throws an error if `condition` evaluates to false. */\nexport function invariant(condition: boolean, format: string, ...args: string[])\n{\n    if (process.env.NODE_ENV === 'production')\n    {\n        return;\n    }\n\n    if (!condition)\n    {\n        let error;\n\n        if (format === undefined)\n        {\n            error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');\n        }\n        else\n        {\n            let argIndex = 0;\n\n            error = new Error(format.replace(/%s/g, () => String(args[argIndex++])));\n            error.name = 'Invariant Violation';\n        }\n\n        throw error;\n    }\n}\n","import {\n    Container,\n    Filter,\n} from 'pixi.js';\nimport { attach } from './attach';\nimport { detach } from './detach';\nimport { invariant } from './invariant';\nimport { log } from './log';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nexport function insertBefore(\n    parentInstance: HostConfig['containerInstance'],\n    childInstance: HostConfig['instance'],\n    beforeChildInstance: HostConfig['instance'],\n)\n{\n    log('info', 'lifecycle::insertBefore');\n\n    invariant(childInstance !== beforeChildInstance, 'Cannot insert node before itself');\n\n    if (childInstance instanceof Container)\n    {\n        const childContainerInstance = childInstance as HostConfig['containerInstance'];\n        const childContainer = childInstance as unknown as Container;\n        const beforeChildContainer = beforeChildInstance as unknown as Container;\n\n        if (childContainerInstance.parent === parentInstance)\n        {\n            parentInstance.removeChild(childContainer);\n        }\n\n        const index = parentInstance.getChildIndex(beforeChildContainer);\n\n        parentInstance.addChildAt(childContainer, index);\n    }\n    else if (childInstance instanceof Filter)\n    {\n        const childFilterInstance = childInstance;\n        const instanceState = childFilterInstance.__pixireact;\n\n        const targetIndex = instanceState.filters.indexOf(beforeChildInstance as unknown as Filter);\n\n        detach(childInstance);\n        attach(parentInstance, childInstance, targetIndex);\n    }\n}\n","import { log } from './log';\n\n/** Store info before React starts making changes tothe tree. */\nexport function prepareForCommit()\n{\n    log('info', 'lifecycle::prepareForCommit');\n\n    return null;\n}\n","import { log } from './log';\n\n/** Called if the container is being used as a portal target. */\nexport function preparePortalMount()\n{\n    log('info', 'lifecycle::preparePortalMount');\n}\n","import { log } from './log';\n\n/** No idea what this actually does. ü§∑üèª‚Äç‚ôÇÔ∏è */\nexport function prepareScopeUpdate()\n{\n    log('info', 'lifecycle::prepareScopeUpdate');\n}\n","import { diffProps } from './diffProps';\nimport { log } from './log';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\nimport type { UpdatePayload } from '../typedefs/UpdatePayload';\n\nexport function prepareUpdate(\n    _instance: HostConfig['instance'],\n    _type: HostConfig['type'],\n    oldProps: HostConfig['props'],\n    newProps: HostConfig['props'],\n)\n{\n    log('info', 'lifecycle::prepareUpdate');\n\n    const updatePayload: UpdatePayload = {\n        shouldReconstruct: false,\n    };\n\n    const {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        children: newChildren,\n        ...newPropsRest\n    } = newProps;\n    const {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        children: oldChildren,\n        ...oldPropsRest\n    } = oldProps;\n\n    const diff = diffProps(newPropsRest, oldPropsRest, true);\n\n    if (diff.changes.length)\n    {\n        updatePayload.diff = diff;\n    }\n\n    return updatePayload;\n}\n","import { log } from './log';\n\n/** Restore anything stored in `prepareForCommit`. */\nexport function resetAfterCommit()\n{\n    log('info', 'lifecycle::resetAfterCommit');\n}\n","import { log } from './log';\n\n/** Determines whether to set the text content of a node. */\nexport function shouldSetTextContent()\n{\n    log('info', 'lifecycle::shouldSetTextContent');\n\n    return false;\n}\n","import {\n    Container,\n    Filter,\n} from 'pixi.js';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nexport function unhideInstance(\n    instance: HostConfig['instance'],\n)\n{\n    if (instance instanceof Container)\n    {\n        instance.visible = true;\n    }\n    else if (instance instanceof Filter)\n    {\n        instance.enabled = true;\n    }\n}\n","/* eslint-disable no-empty-function */\n\nimport Reconciler from 'react-reconciler';\nimport packageData from '../../package.json' assert { type: 'json' };\nimport { afterActiveInstanceBlur } from '../helpers/afterActiveInstanceBlur';\nimport { appendChild } from '../helpers/appendChild';\nimport { beforeActiveInstanceBlur } from '../helpers/beforeActiveInstanceBlur';\nimport { clearContainer } from '../helpers/clearContainer';\nimport { commitUpdate } from '../helpers/commitUpdate';\nimport { createInstance } from '../helpers/createInstance';\nimport { createTextInstance } from '../helpers/createTextInstance';\nimport { detachDeletedInstance } from '../helpers/detachDeletedInstance';\nimport { finalizeInitialChildren } from '../helpers/finalizeInitialChildren';\nimport { getChildHostContext } from '../helpers/getChildHostContext';\nimport { getCurrentEventPriority } from '../helpers/getCurrentEventPriority';\nimport { getInstanceFromNode } from '../helpers/getInstanceFromNode';\nimport { getInstanceFromScope } from '../helpers/getInstanceFromScope';\nimport { getPublicInstance } from '../helpers/getPublicInstance';\nimport { getRootHostContext } from '../helpers/getRootHostContext';\nimport { hideInstance } from '../helpers/hideInstance';\nimport { insertBefore } from '../helpers/insertBefore';\nimport { prepareForCommit } from '../helpers/prepareForCommit';\nimport { preparePortalMount } from '../helpers/preparePortalMount';\nimport { prepareScopeUpdate } from '../helpers/prepareScopeUpdate';\nimport { prepareUpdate } from '../helpers/prepareUpdate';\nimport { removeChild } from '../helpers/removeChild';\nimport { resetAfterCommit } from '../helpers/resetAfterCommit';\nimport { shouldSetTextContent } from '../helpers/shouldSetTextContent';\nimport { unhideInstance } from '../helpers/unhideInstance';\n\nimport type { HostConfig } from '../typedefs/HostConfig';\n\nconst reconcilerConfig: Reconciler.HostConfig<\nHostConfig['type'],\nHostConfig['props'],\nHostConfig['containerInstance'],\nHostConfig['instance'],\nHostConfig['textInstance'],\nHostConfig['suspenseInstance'],\nHostConfig['hydratableInstance'],\nHostConfig['publicInstance'],\nHostConfig['hostContext'],\nHostConfig['updatePayload'],\nHostConfig['childSet'],\nHostConfig['timeoutHandle'],\nHostConfig['noTimeout']\n> = {\n    isPrimaryRenderer: false,\n    noTimeout: -1,\n    supportsHydration: false,\n    supportsMutation: true,\n    supportsPersistence: false,\n\n    afterActiveInstanceBlur,\n    appendChild,\n    appendChildToContainer: appendChild,\n    appendInitialChild: appendChild,\n    beforeActiveInstanceBlur,\n    cancelTimeout: clearTimeout,\n    clearContainer,\n    commitUpdate,\n    createInstance,\n    createTextInstance,\n    detachDeletedInstance,\n    finalizeInitialChildren,\n    getChildHostContext,\n    getCurrentEventPriority,\n    getInstanceFromNode,\n    getInstanceFromScope,\n    getPublicInstance,\n    getRootHostContext,\n    hideInstance,\n    insertBefore,\n    insertInContainerBefore: insertBefore,\n    prepareForCommit,\n    preparePortalMount,\n    prepareScopeUpdate,\n    prepareUpdate,\n    removeChild,\n    removeChildFromContainer: removeChild,\n    resetAfterCommit,\n    scheduleTimeout: setTimeout,\n    shouldSetTextContent,\n    unhideInstance,\n};\n\nconst reconciler = Reconciler(reconcilerConfig);\n\nreconciler.injectIntoDevTools({\n    bundleType: process.env.NODE_ENV === 'production' ? 0 : 1,\n    rendererPackageName: '@pixi/react',\n    version: packageData.version,\n});\n\nexport { reconciler };\n","import type { Root } from '../typedefs/Root';\n\n/** We store roots here since we can render to multiple canvases. */\nexport const roots: Map<HTMLElement, Root> = new Map();\n","import { Application } from 'pixi.js';\nimport { createElement } from 'react';\nimport { ConcurrentRoot } from 'react-reconciler/constants.js';\nimport { ContextProvider } from '../components/Context';\nimport { isReadOnlyProperty } from '../helpers/isReadOnlyProperty';\nimport { log } from '../helpers/log';\nimport { prepareInstance } from '../helpers/prepareInstance';\nimport { reconciler } from './reconciler';\nimport { roots } from './roots';\n\nimport type { ApplicationOptions } from 'pixi.js';\nimport type { ReactNode } from 'react';\nimport type { ApplicationState } from '../typedefs/ApplicationState';\nimport type { CreateRootOptions } from '../typedefs/CreateRootOptions';\nimport type { HostConfig } from '../typedefs/HostConfig';\nimport type { InternalState } from '../typedefs/InternalState';\n\n/** Creates a new root for a Pixi React app. */\nexport function createRoot(\n    /** @description The DOM node which will serve as the root for this tree. */\n    target: HTMLElement | HTMLCanvasElement,\n\n    /** @description Options to configure the tree. */\n    options: CreateRootOptions = {},\n\n    /**\n     * @deprecated\n     * @description Callback to be fired when the application finishes initializing.\n     */\n    onInit?: (app: Application) => void,\n)\n{\n    // Check against mistaken use of createRoot\n    let root = roots.get(target);\n    let applicationState = (root?.applicationState ?? {\n        isInitialised: false,\n        isInitialising: false,\n    }) as ApplicationState;\n\n    const internalState = root?.internalState ?? {} as InternalState;\n\n    if (root)\n    {\n        log('warn', 'createRoot should only be called once!');\n    }\n    else\n    {\n        applicationState.app = new Application();\n        internalState.rootContainer = prepareInstance(applicationState.app.stage) as HostConfig['containerInstance'];\n    }\n\n    const fiber = root?.fiber ?? reconciler.createContainer(\n        internalState.rootContainer,\n        ConcurrentRoot,\n        null,\n        false,\n        null,\n        '',\n        console.error,\n        null,\n    );\n\n    if (!root)\n    {\n        let canvas: HTMLCanvasElement | undefined;\n\n        if (target instanceof HTMLCanvasElement)\n        {\n            canvas = target;\n        }\n\n        if (!canvas)\n        {\n            canvas = document.createElement('canvas');\n            target.innerHTML = '';\n            target.appendChild(canvas);\n        }\n        internalState.canvas = canvas;\n\n        const render = async (\n            children: ReactNode,\n            applicationOptions: ApplicationOptions,\n        ) =>\n        {\n            if (!applicationState.app.renderer && !applicationState.isInitialised && !applicationState.isInitialising)\n            {\n                applicationState.isInitialising = true;\n                await applicationState.app.init({\n                    ...applicationOptions,\n                    canvas,\n                });\n                applicationState.isInitialising = false;\n                applicationState.isInitialised = true;\n                applicationState = { ...applicationState };\n                (options.onInit ?? onInit)?.(applicationState.app);\n            }\n\n            Object.entries(applicationOptions).forEach(([key, value]) =>\n            {\n                const typedKey = /** @type {keyof ApplicationOptions} */ (key);\n\n                if (isReadOnlyProperty(\n                    applicationOptions as unknown as Record<string, unknown>,\n                    typedKey,\n                ))\n                {\n                    return;\n                }\n\n                // @ts-expect-error Typescript doesn't realise it, but we're already verifying that this isn't a readonly key.\n                applicationState.app[typedKey] = value;\n            });\n\n            // Update fiber and expose Pixi.js state to children\n            reconciler.updateContainer(\n                createElement(ContextProvider, { value: applicationState }, children),\n                fiber,\n                null,\n                () => undefined,\n            );\n\n            return applicationState.app;\n        };\n\n        root = {\n            applicationState,\n            fiber,\n            internalState,\n            render,\n        };\n\n        roots.set(canvas, root);\n    }\n\n    return root;\n}\n","import { reconciler } from '../core/reconciler';\nimport { roots } from '../core/roots';\nimport { store } from '../store';\nimport { type Root } from '../typedefs/Root';\n\nexport function unmountRoot(root: Root)\n{\n    store.unmountQueue.delete(root);\n\n    const fiber = root.fiber;\n\n    if (fiber)\n    {\n        reconciler.updateContainer(null, fiber, null, () =>\n        {\n            if (root.applicationState.app)\n            {\n                root.applicationState.app.destroy();\n            }\n\n            roots.delete(root.internalState.canvas!);\n        });\n    }\n}\n","import { store } from '../store';\nimport { unmountRoot } from './unmountRoot';\n\nexport function processUnmountQueue()\n{\n    for (const root of store.unmountQueue)\n    {\n        unmountRoot(root);\n    }\n}\n","import { roots } from '../core/roots';\nimport { store } from '../store';\nimport { unmountRoot } from './unmountRoot';\n\nexport function queueForUnmount(canvas: HTMLCanvasElement)\n{\n    const root = roots.get(canvas);\n\n    if (root)\n    {\n        if (root.applicationState.isInitialised)\n        {\n            unmountRoot(root);\n        }\n        else\n        {\n            store.unmountQueue.add(root);\n        }\n    }\n}\n","import { roots } from '../core/roots';\nimport { store } from '../store';\n\nexport function unqueueForUnmount(canvas: HTMLCanvasElement)\n{\n    const root = roots.get(canvas);\n\n    if (root)\n    {\n        store.unmountQueue.delete(root);\n    }\n}\n","import {\n    useEffect,\n    useLayoutEffect,\n} from 'react';\n\nexport const useIsomorphicLayoutEffect\n  = typeof window !== 'undefined' && (window.document?.createElement || window.navigator?.product === 'ReactNative')\n      ? useLayoutEffect\n      : useEffect;\n","import {\n    type Application as PixiApplication,\n    extensions as PixiExtensions,\n    TextStyle,\n} from 'pixi.js';\nimport {\n    createElement,\n    forwardRef,\n    type ForwardRefRenderFunction,\n    type MutableRefObject,\n    useCallback,\n    useEffect,\n    useRef,\n} from 'react';\nimport { createRoot } from '../core/createRoot';\nimport { roots } from '../core/roots';\nimport { processUnmountQueue } from '../helpers/processUnmountQueue';\nimport { queueForUnmount } from '../helpers/queueForUnmount';\nimport { unqueueForUnmount } from '../helpers/unqueueForUnmount';\nimport { useIsomorphicLayoutEffect } from '../hooks/useIsomorphicLayoutEffect';\nimport { type ApplicationProps } from '../typedefs/ApplicationProps';\n\nconst originalDefaultTextStyle = { ...TextStyle.defaultTextStyle };\n\n/** Creates a React root and renders a Pixi application. */\nexport const ApplicationFunction: ForwardRefRenderFunction<PixiApplication, ApplicationProps> = (\n    props,\n    forwardedRef,\n) =>\n{\n    const {\n        attachToDevTools,\n        children,\n        className,\n        defaultTextStyle,\n        extensions,\n        onInit,\n        resizeTo,\n        ...applicationProps\n    } = props;\n\n    const applicationRef: MutableRefObject<PixiApplication | null> = useRef(null);\n    const canvasRef: MutableRefObject<HTMLCanvasElement | null> = useRef(null);\n    const extensionsRef: MutableRefObject<Set<any>> = useRef(new Set());\n\n    const updateResizeTo = useCallback(() =>\n    {\n        const application = applicationRef.current;\n\n        if (application)\n        {\n            if (resizeTo)\n            {\n                if ('current' in resizeTo)\n                {\n                    if (resizeTo.current instanceof HTMLElement)\n                    {\n                        application.resizeTo = resizeTo.current;\n                    }\n                }\n                else\n                {\n                    application.resizeTo = resizeTo;\n                }\n            }\n            else\n            {\n                // @ts-expect-error Actually `resizeTo` is optional, the types are just wrong. ü§∑üèª‚Äç‚ôÇÔ∏è\n                application.resizeTo = undefined;\n            }\n        }\n    }, [resizeTo]);\n\n    const handleInit = useCallback((application: PixiApplication) =>\n    {\n        processUnmountQueue();\n\n        if (forwardedRef && ('current' in forwardedRef))\n        {\n            forwardedRef.current = application;\n        }\n\n        applicationRef.current = application;\n        updateResizeTo();\n        onInit?.(application);\n\n        if (attachToDevTools)\n        {\n            const globalScope = globalThis as any;\n\n            globalScope.__PIXI_APP__ = application;\n\n            import('pixi.js').then((pixi) =>\n            {\n                globalScope.__PIXI_DEVTOOLS__ = {\n                    app: application,\n                    pixi,\n                    renderer: application.renderer,\n                    stage: application.stage,\n                };\n            });\n        }\n    }, [onInit]);\n\n    useIsomorphicLayoutEffect(() =>\n    {\n        if (extensions)\n        {\n            const extensionsToHandle = [...extensions];\n            const extensionsState = extensionsRef.current;\n\n            // Check for extensions that have been removed from the array\n            for (const extension of extensionsState.values())\n            {\n                const extensionIndex = extensionsToHandle.indexOf(extension);\n\n                // If the extension is no longer in the array, we'll remove it from Pixi.js\n                if (extensionIndex === -1)\n                {\n                    PixiExtensions.remove(extension);\n                    extensionsState.delete(extension);\n                }\n\n                // Since the extension already existed in the state, we can remove it to prevent any further handling\n                extensionsToHandle.splice(extensionIndex, 1);\n            }\n\n            // Load any remaining extensions.\n            for (const extension in extensionsToHandle)\n            {\n                PixiExtensions.add(extension);\n                extensionsState.add(extension);\n            }\n        }\n    }, [extensions]);\n\n    useIsomorphicLayoutEffect(() =>\n    {\n        const canvasElement = canvasRef.current;\n\n        if (canvasElement)\n        {\n            let root = roots.get(canvasElement);\n\n            if (!root)\n            {\n                root = createRoot(canvasElement, {}, handleInit);\n            }\n\n            root.render(children, applicationProps);\n        }\n    }, [\n        applicationProps,\n        children,\n        handleInit,\n        resizeTo,\n    ]);\n\n    useIsomorphicLayoutEffect(() =>\n    {\n        updateResizeTo();\n    }, [resizeTo]);\n\n    useIsomorphicLayoutEffect(() =>\n    {\n        if (defaultTextStyle)\n        {\n            Object.assign(TextStyle.defaultTextStyle, defaultTextStyle);\n        }\n        else\n        {\n            Object.assign(TextStyle.defaultTextStyle, originalDefaultTextStyle);\n        }\n    }, [defaultTextStyle]);\n\n    // eslint-disable-next-line consistent-return\n    useEffect(() =>\n    {\n        const canvasElement = canvasRef.current;\n\n        if (canvasElement)\n        {\n            unqueueForUnmount(canvasElement);\n\n            return () =>\n            {\n                queueForUnmount(canvasElement);\n            };\n        }\n    }, []);\n\n    return createElement('canvas', {\n        className,\n        ref: canvasRef,\n    });\n};\n\nApplicationFunction.displayName = 'Application';\n\nexport const Application = forwardRef(ApplicationFunction);\n","export const UseAssetsStatus: Record<string, 'error' | 'pending' | 'success'> = {\n    ERROR: 'error',\n    PENDING: 'pending',\n    SUCCESS: 'success',\n};\n","import { catalogue } from './catalogue';\n\nexport function extend(objects: { [key: string]: new (...args: any) => any })\n{\n    Object.assign(catalogue, objects);\n}\n","import { Application } from 'pixi.js';\nimport { useContext } from 'react';\nimport { Context } from '../components/Context';\nimport { invariant } from '../helpers/invariant';\n\n/**\n * @deprecated\n * @description Retrieves the nearest Pixi.js Application from the Pixi React context.\n */\nexport function useApp()\n{\n    const { app } = useContext(Context);\n\n    invariant(\n        app instanceof Application,\n        'No Context found with `%s`. Make sure to wrap component with `%s`',\n        'Application',\n        'AppProvider'\n    );\n\n    return app;\n}\n","import { Application } from 'pixi.js';\nimport { useContext } from 'react';\nimport { Context } from '../components/Context';\nimport { invariant } from '../helpers/invariant';\n\n/**\n * @description Retrieves the nearest Pixi.js Application from the Pixi React context.\n */\nexport function useApplication()\n{\n    const appContext = useContext(Context);\n\n    invariant(\n        appContext.app instanceof Application,\n        'No Context found with `%s`. Make sure to wrap component with `%s`',\n        'Application',\n        'AppProvider'\n    );\n\n    return appContext;\n}\n","import type { UnresolvedAsset } from '../typedefs/UnresolvedAsset';\n\n/** Retrieves the key from an unresolved asset. */\nexport function getAssetKey<T>(asset: UnresolvedAsset<T>)\n{\n    let assetKey;\n\n    if (typeof asset === 'string')\n    {\n        assetKey = asset;\n    }\n    else\n    {\n        assetKey = (asset.alias ?? asset.src) as string;\n    }\n\n    return assetKey;\n}\n","import {\n    Assets,\n    Cache,\n} from 'pixi.js';\nimport { getAssetKey } from '../helpers/getAssetKey';\n\nimport type {\n    ProgressCallback,\n    UnresolvedAsset,\n} from 'pixi.js';\nimport type { AssetRetryOptions } from '../typedefs/AssetRetryOptions';\nimport type { AssetRetryState } from '../typedefs/AssetRetryState';\nimport type { ErrorCallback } from '../typedefs/ErrorCallback';\n\nconst errorCache: Map<UnresolvedAsset | string, AssetRetryState> = new Map();\n\n/** @deprecated Use `useAssets` instead. */\nexport function useAsset<T = any>(\n    /** @description Asset options. */\n    options: (UnresolvedAsset & AssetRetryOptions) | string,\n    /** @description A function to be called when the asset loader reports loading progress. */\n    onProgress?: ProgressCallback,\n    /** @description A function to be called when the asset loader reports loading progress. */\n    onError?: ErrorCallback,\n)\n{\n    if (typeof window === 'undefined')\n    {\n        /**\n         * This is a weird hack that allows us to throw the error during\n         * serverside rendering, but still causes it to be handled appropriately\n         * in Next.js applications.\n         *\n         * @see https://github.com/vercel/next.js/blob/38b3423160afc572ad933c24c86fc572c584e70b/packages/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts\n         */\n        throw Object.assign(Error('`useAsset` will only run on the client.'), {\n            digest: 'BAILOUT_TO_CLIENT_SIDE_RENDERING',\n        });\n    }\n\n    const {\n        maxRetries = 3,\n        retryOnFailure = true,\n    } = typeof options !== 'string' ? options : {};\n\n    const assetKey = getAssetKey(options);\n\n    if (!Cache.has(assetKey))\n    {\n        let state = errorCache.get(options);\n\n        // Rethrow the cached error if we are not retrying on failure or have reached the max retries\n        if (state && (!retryOnFailure || state.retries > maxRetries))\n        {\n            if (typeof onError === 'function')\n            {\n                onError?.(state.error);\n            }\n            else\n            {\n                throw state.error;\n            }\n        }\n\n        throw Assets\n            .load<T>(options, onProgress)\n            .catch((error) =>\n            {\n                if (!state)\n                {\n                    state = {\n                        error,\n                        retries: 0,\n                    };\n                }\n\n                errorCache.set(options, {\n                    ...state,\n                    error,\n                    retries: state.retries + 1,\n                });\n            });\n    }\n\n    return Assets.get<T>(assetKey);\n}\n","import {\n    Assets,\n    Cache,\n} from 'pixi.js';\nimport { useState } from 'react';\nimport { UseAssetsStatus } from '../constants/UseAssetsStatus';\nimport { getAssetKey } from '../helpers/getAssetKey';\n\nimport type { AssetRetryState } from '../typedefs/AssetRetryState';\nimport type { UnresolvedAsset } from '../typedefs/UnresolvedAsset';\nimport type { UseAssetsOptions } from '../typedefs/UseAssetsOptions';\nimport type { UseAssetsResult } from '../typedefs/UseAssetsResult';\n\nconst errorCache: Map<UnresolvedAsset, AssetRetryState> = new Map();\n\nfunction assetsLoadedTest<T>(asset: UnresolvedAsset<T>)\n{\n    return Cache.has(getAssetKey(asset));\n}\n\n/** Loads assets, returning a hash of assets once they're loaded. */\nexport function useAssets<T = any>(\n    /** @description Assets to be loaded. */\n    assets: UnresolvedAsset[],\n\n    /** @description Asset options. */\n    options: UseAssetsOptions = {},\n): UseAssetsResult<T>\n{\n    const [state, setState] = useState<UseAssetsResult<T>>({\n        assets: Array(assets.length).fill(undefined),\n        isError: false,\n        isPending: true,\n        isSuccess: false,\n        status: UseAssetsStatus.PENDING,\n    });\n\n    if (typeof window === 'undefined')\n    {\n        return state;\n    }\n\n    const {\n        maxRetries = 3,\n        onError,\n        onProgress,\n        retryOnFailure = true,\n    } = options;\n\n    const allAssetsAreLoaded = assets.some(assetsLoadedTest<T>);\n\n    if (!allAssetsAreLoaded)\n    {\n        let cachedState = errorCache.get(assets);\n\n        // Rethrow the cached error if we are not retrying on failure or have reached the max retries\n        if (cachedState && (!retryOnFailure || cachedState.retries > maxRetries))\n        {\n            if (typeof onError === 'function')\n            {\n                onError(cachedState.error);\n            }\n\n            setState((previousState) => ({\n                ...previousState,\n                error: cachedState?.error,\n                isError: true,\n                isPending: false,\n                isSuccess: false,\n                status: UseAssetsStatus.ERROR,\n            }));\n        }\n\n        Assets.load<T>(assets, (progressValue) =>\n        {\n            if (typeof onProgress === 'function')\n            {\n                onProgress(progressValue);\n            }\n        })\n            .then(() =>\n            {\n                const assetKeys = assets.map((asset: UnresolvedAsset<T>) => getAssetKey(asset));\n                const resolvedAssetsDictionary = Assets.get<T>(assetKeys) as Record<string, T>;\n\n                setState((previousState) => ({\n                    ...previousState,\n                    assets: assets.map((_asset: UnresolvedAsset<T>, index: number) => resolvedAssetsDictionary[index]),\n                    isError: false,\n                    isPending: false,\n                    isSuccess: true,\n                    status: UseAssetsStatus.SUCCESS,\n                }));\n            })\n            .catch((error) =>\n            {\n                if (!cachedState)\n                {\n                    cachedState = {\n                        error,\n                        retries: 0,\n                    };\n                }\n\n                errorCache.set(assets, {\n                    ...cachedState,\n                    error,\n                    retries: cachedState.retries + 1,\n                });\n            });\n    }\n\n    return state;\n}\n","import { useMemo } from 'react';\nimport { extend } from '../helpers/extend';\n\n/** Expose Pixi.js components for use in JSX. */\nexport function useExtend(\n    /** @description The Pixi.js components to be exposed. */\n    objects: Parameters<typeof extend>[0],\n)\n{\n    useMemo(() =>\n    {\n        extend(objects);\n    }, [objects]);\n}\n","import {\n    Assets,\n    Cache,\n} from 'pixi.js';\nimport { getAssetKey } from '../helpers/getAssetKey';\n\nimport type { AssetRetryState } from '../typedefs/AssetRetryState';\nimport type { UnresolvedAsset } from '../typedefs/UnresolvedAsset';\nimport type { UseAssetsOptions } from '../typedefs/UseAssetsOptions';\n\nconst errorCache: Map<UnresolvedAsset, AssetRetryState> = new Map();\n\nfunction assetsLoadedTest<T>(asset: UnresolvedAsset<T>)\n{\n    return Cache.has(getAssetKey(asset));\n}\n\n/** Loads assets, returning a hash of assets once they're loaded. Must be inside of a `<Suspense>` component. */\nexport function useSuspenseAssets<T = any>(\n    /** @description Assets to be loaded. */\n    assets: UnresolvedAsset[],\n    /** @description Asset options. */\n    options: UseAssetsOptions = {},\n): T[]\n{\n    if (typeof window === 'undefined')\n    {\n        throw Object.assign(Error('`useAssets` will only run on the client.'), {\n            digest: 'BAILOUT_TO_CLIENT_SIDE_RENDERING',\n        });\n    }\n\n    const {\n        maxRetries = 3,\n        onError,\n        onProgress,\n        retryOnFailure = true,\n    } = options;\n\n    const allAssetsAreLoaded = assets.some(assetsLoadedTest<T>);\n\n    if (!allAssetsAreLoaded)\n    {\n        let cachedState = errorCache.get(assets);\n\n        // Rethrow the cached error if we are not retrying on failure or have reached the max retries\n        if (cachedState && (!retryOnFailure || cachedState.retries > maxRetries))\n        {\n            if (typeof onError === 'function')\n            {\n                onError(cachedState.error);\n            }\n            else\n            {\n                throw cachedState.error;\n            }\n        }\n\n        throw Assets\n            .load<T>(assets, (progressValue) =>\n        {\n            if (typeof onProgress === 'function')\n            {\n                onProgress(progressValue);\n            }\n        })\n            .catch((error) =>\n            {\n                if (!cachedState)\n                {\n                    cachedState = {\n                        error,\n                        retries: 0,\n                    };\n                }\n\n                errorCache.set(assets, {\n                    ...cachedState,\n                    error,\n                    retries: cachedState.retries + 1,\n                });\n            });\n    }\n\n    const assetKeys = assets.map((asset: UnresolvedAsset<T>) => getAssetKey(asset));\n    const resolvedAssetsDictionary = Assets.get<T>(assetKeys) as Record<string, T>;\n\n    return assets.map((_asset: UnresolvedAsset<T>, index: number) => resolvedAssetsDictionary[index]);\n}\n","import { invariant } from '../helpers/invariant';\nimport { useApplication } from './useApplication';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\nimport type { TickerCallback } from 'pixi.js';\nimport type { UseTickOptions } from '../typedefs/UseTickOptions';\n\n/** Attaches a callback to the application's Ticker. */\nexport function useTick<T>(\n    /** @description The function to be called on each tick. */\n    options: TickerCallback<T> | UseTickOptions<T>,\n\n    /**\n     * @deprecated\n     * @description Whether this callback is currently enabled.\n     */\n    enabled = true,\n)\n{\n    const {\n        app,\n        isInitialised,\n    } = useApplication();\n\n    let callback;\n\n    let context: any;\n\n    let isEnabled = enabled;\n\n    let priority: number | undefined;\n\n    if (typeof options === 'function')\n    {\n        callback = options;\n    }\n    else\n    {\n        callback = options.callback;\n        context = options.context;\n        isEnabled = options.isEnabled ?? true;\n        priority = options.priority;\n    }\n\n    invariant(typeof callback === 'function', '`useTick` needs a callback function.');\n\n    // eslint-disable-next-line consistent-return\n    useIsomorphicLayoutEffect(() =>\n    {\n        if (isInitialised)\n        {\n            const ticker = app?.ticker;\n            const wasEnabled = isEnabled;\n            const previousContext = context;\n            const previousCallback = callback;\n\n            if (isEnabled && ticker)\n            {\n                ticker.add(callback, context, priority);\n            }\n\n            return () =>\n            {\n                if (wasEnabled)\n                {\n                    ticker?.remove(previousCallback, previousContext);\n                }\n            };\n        }\n    }, [\n        callback,\n        context,\n        isEnabled,\n        isInitialised,\n        priority,\n    ]);\n}\n","console.warn(`\nBe aware that you are using a beta version of Pixi React.\n- Things may be broken.\n- Things may (but shouldn't) change.\n- All functionality that's deprecated in the beta version WILL BE REMOVED for the production release.\n`);\n\nexport { Application } from './components/Application';\nexport { UseAssetsStatus } from './constants/UseAssetsStatus';\nexport { createRoot } from './core/createRoot';\nexport * from './global';\nexport { extend } from './helpers/extend';\nexport { useApp } from './hooks/useApp';\nexport { useApplication } from './hooks/useApplication';\nexport { useAsset } from './hooks/useAsset';\nexport { useAssets } from './hooks/useAssets';\nexport { useExtend } from './hooks/useExtend';\nexport { useSuspenseAssets } from './hooks/useSuspenseAssets';\nexport { useTick } from './hooks/useTick';\n"],"names":["createContext","Filter","Container","DEFAULT","entries","value","Graphics","fiber","DefaultEventPriority","DiscreteEventPriority","ContinuousEventPriority","Application","ConcurrentRoot","createElement","useLayoutEffect","useEffect","TextStyle","useRef","useCallback","PixiExtensions","forwardRef","useContext","errorCache","Cache","Assets","assetsLoadedTest","useState","useMemo"],"mappings":"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"}